# Example register definition file.
#
# You need to define a Poller and then one or more References for that poller.
# The Poller will 'poll' the devid and bring back 1 or more registers/bits.
# The References must then match up with the polled range to define the topic for each.
#
#################################################################################
# Poller-object
# Columns:
# type, name, devid, reference, size, functioncode, endian
#
# Possible values for columns:
# type: poll
# name: any string without spaces to describe the poller
# devid: integer 1 to 254
# reference: integer 0 to 65535 (Modbus references are as transmitted on the wire.
# In the traditional numbering scheme these would have been called offsets. E. g. to
# read 400020 you would use reference 20.)
# size: integer 0 to 65535 (No. of registers to poll and value must not exceed the limits of Modbus of course)
# functionscode: coil/input_status/holding_register/input_register
# endian: to describe byte_order and word_order e.g. BE_BE/BE_LE/LE_LE/LE_BE
#################################################################################
# Reference-Object
# Columns:
# type, name, unit, reference, dtype, scale
#
# type: ref
# name: any string without spaces
# reference: integer 0 to 65535 (This is the modbus offset and should match the poller ref)
# dtype: uint16/int16/uint32/int32/float32/bool/stringXXX (defaults to uint16)
# scale (optional): float value to be multiplied with output value
#################################################################################
poll,dev001,1,46001,6,holding_register,BE_BE
ref,CT_TYPE,,46001,uint16,1,
ref,CT_RATING,,46002,uint16,1,
ref,DATA_SCALAR,,46003,uint16,1,
ref,ReservedA,,46004,uint16,1,
ref,ReservedB,,46005,uint16,1,
ref,SIGNED MODE,,46006,uint16,1,
